[0.009s] Invoking command in '/home/buhrmann/ws_moveit/build/point_cloud_circle_detector': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/buhrmann/ws_moveit/install/moveit_configs_utils:/opt/ros/iron /usr/bin/cmake --build /home/buhrmann/ws_moveit/build/point_cloud_circle_detector -- -j28 -l28
[0.049s] [35m[1mConsolidate compiler generated dependencies of target point_cloud_plantpot_rgb_edge_pfh_detector[0m
[0.057s] [ 25%] Built target rgb_edge_filter
[0.057s] [ 25%] Built target point_cloud_circle_detector
[0.058s] [ 37%] Built target point_cloud_plantpot_edge_pfh_detector
[0.059s] [ 50%] Built target point_cloud_plantpot_ppf_detector
[0.059s] [ 62%] Built target point_cloud_plantpot_detector
[0.060s] [ 75%] Built target point_cloud_cylinder_detector
[0.063s] [ 81%] [32mBuilding CXX object CMakeFiles/point_cloud_plantpot_pfh_detector.dir/src/point_cloud_plantpot_pfh_detector.cpp.o[0m
[0.067s] [ 93%] Built target point_cloud_plantpot_rgb_edge_pfh_detector
[3.237s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudCustomObjectMatcher::listener_callback(sensor_msgs::msg::PointCloud2_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[3.237s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:140:30:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.237s]   140 |             ne.setInputCloud([01;31m[Kcloud_rgb_filtered[m[K);
[3.237s]       |                              [01;31m[K^~~~~~~~~~~~~~~~~~[m[K
[3.237s]       |                              [01;31m[K|[m[K
[3.237s]       |                              [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.237s] In file included from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:15[m[K:
[3.237s] [01m[K/usr/local/include/pcl-1.14/pcl/features/normal_3d.h:328:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::NormalEstimation<PointInT, PointOutT>::setInputCloud(const PointCloudConstPtr&) [with PointInT = pcl::PointXYZ; PointOutT = pcl::Normal; pcl::NormalEstimation<PointInT, PointOutT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.237s]   328 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K) override
[3.237s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[3.249s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:154:41:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.249s]   154 |             pfh_estimator.setInputCloud([01;31m[Kcloud_rgb_filtered[m[K);  // Set input cloud
[3.249s]       |                                         [01;31m[K^~~~~~~~~~~~~~~~~~[m[K
[3.249s]       |                                         [01;31m[K|[m[K
[3.249s]       |                                         [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.249s] In file included from [01m[K/usr/local/include/pcl-1.14/pcl/pcl_base.h:253[m[K,
[3.249s]                  from [01m[K/usr/local/include/pcl-1.14/pcl/filters/filter.h:42[m[K,
[3.249s]                  from [01m[K/usr/local/include/pcl-1.14/pcl/filters/filter_indices.h:42[m[K,
[3.249s]                  from [01m[K/usr/local/include/pcl-1.14/pcl/filters/extract_indices.h:42[m[K,
[3.249s]                  from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:2[m[K:
[3.249s] [01m[K/usr/local/include/pcl-1.14/pcl/impl/pcl_base.hpp:65:64:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::PCLBase<PointT>::setInputCloud(const PointCloudConstPtr&) [with PointT = pcl::PointXYZ; pcl::PCLBase<PointT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.249s]    65 | pcl::PCLBase<PointT>::setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K)
[3.249s]       |                                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[3.259s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:209:35:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudTargetConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.259s]   209 |             sac_ia.setInputTarget([01;31m[Kcloud_rgb_filtered[m[K);  // The filtered scene point cloud
[3.259s]       |                                   [01;31m[K^~~~~~~~~~~~~~~~~~[m[K
[3.259s]       |                                   [01;31m[K|[m[K
[3.259s]       |                                   [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.259s] In file included from [01m[K/usr/local/include/pcl-1.14/pcl/registration/registration.h:700[m[K,
[3.259s]                  from [01m[K/usr/local/include/pcl-1.14/pcl/registration/icp.h:46[m[K,
[3.259s]                  from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:3[m[K:
[3.259s] [01m[K/usr/local/include/pcl-1.14/pcl/registration/impl/registration.hpp:62:37:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::Registration<PointSource, PointTarget, Scalar>::setInputTarget(const PointCloudTargetConstPtr&) [with PointSource = pcl::PointXYZ; PointTarget = pcl::PointXYZ; Scalar = float; pcl::Registration<PointSource, PointTarget, Scalar>::PointCloudTargetConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.260s]    62 |     [01;36m[Kconst PointCloudTargetConstPtr& cloud[m[K)
[3.260s]       |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[3.262s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudCustomObjectMatcher::overrideOrientationAndPlaceOnPlane(pcl::PointCloud<pcl::PointXYZ>::Ptr&)[m[Kâ€™:
[3.262s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:269:78:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kcloud[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wunused-parameter-Wunused-parameter]8;;[m[K]
[3.262s]   269 | void overrideOrientationAndPlaceOnPlane([01;35m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr& cloud[m[K)
[3.262s]       |                                         [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[9.526s] gmake[2]: *** [CMakeFiles/point_cloud_plantpot_pfh_detector.dir/build.make:76: CMakeFiles/point_cloud_plantpot_pfh_detector.dir/src/point_cloud_plantpot_pfh_detector.cpp.o] Error 1
[9.527s] gmake[1]: *** [CMakeFiles/Makefile2:255: CMakeFiles/point_cloud_plantpot_pfh_detector.dir/all] Error 2
[9.527s] gmake: *** [Makefile:146: all] Error 2
[9.529s] Invoked command in '/home/buhrmann/ws_moveit/build/point_cloud_circle_detector' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/buhrmann/ws_moveit/install/moveit_configs_utils:/opt/ros/iron /usr/bin/cmake --build /home/buhrmann/ws_moveit/build/point_cloud_circle_detector -- -j28 -l28
