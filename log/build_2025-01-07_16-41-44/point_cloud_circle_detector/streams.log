[0.009s] Invoking command in '/home/buhrmann/ws_moveit/build/point_cloud_circle_detector': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/buhrmann/ws_moveit/install/moveit_configs_utils:/opt/ros/iron /usr/bin/cmake --build /home/buhrmann/ws_moveit/build/point_cloud_circle_detector -- -j28 -l28
[0.065s] [35m[1mConsolidate compiler generated dependencies of target point_cloud_plantpot_detector[0m
[0.073s] [ 33%] Built target point_cloud_circle_detector
[0.079s] [ 66%] Built target point_cloud_cylinder_detector
[0.091s] [ 83%] [32mBuilding CXX object CMakeFiles/point_cloud_plantpot_detector.dir/src/point_cloud_custom_plant_pot_detection.cpp.o[0m
[3.837s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudCustomObjectMatcher::listener_callback(sensor_msgs::msg::PointCloud2_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[3.837s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:89:23:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kconst Ptr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >&[m[Kâ€™}
[3.837s]    89 |         filter_by_rgb([01;31m[Kcloud[m[K, cloud_filtered);
[3.837s]       |                       [01;31m[K^~~~~[m[K
[3.837s]       |                       [01;31m[K|[m[K
[3.837s]       |                       [01;31m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >}[m[K
[3.837s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:171:70:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid PointCloudCustomObjectMatcher::filter_by_rgb(const Ptr&, pcl::PointCloud<pcl::PointXYZRGB>::Ptr&)[m[Kâ€™
[3.837s]   171 |     void filter_by_rgb([01;36m[Kconst pcl::PointCloud<pcl::PointXYZRGB>::Ptr& input_cloud[m[K,
[3.837s]       |                        [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~[m[K
[3.837s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:93:27:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.837s]    93 |         sor.setInputCloud([01;31m[Kcloud_filtered[m[K);
[3.838s]       |                           [01;31m[K^~~~~~~~~~~~~~[m[K
[3.838s]       |                           [01;31m[K|[m[K
[3.838s]       |                           [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.838s] In file included from [01m[K/usr/include/pcl-1.12/pcl/filters/filter.h:42[m[K,
[3.838s]                  from [01m[K/usr/include/pcl-1.12/pcl/filters/filter_indices.h:42[m[K,
[3.838s]                  from [01m[K/usr/include/pcl-1.12/pcl/filters/extract_indices.h:42[m[K,
[3.838s]                  from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:1[m[K:
[3.838s] [01m[K/usr/include/pcl-1.12/pcl/pcl_base.h:92:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::PCLBase<PointT>::setInputCloud(const PointCloudConstPtr&) [with PointT = pcl::PointXYZ; pcl::PCLBase<PointT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.838s]    92 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K);
[3.838s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[3.838s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:96:19:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kpcl::RadiusOutlierRemoval<pcl::PointXYZ>::filter(std::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZRGB>, __gnu_cxx::_S_atomic, false, false>::element_type&)[m[Kâ€™
[3.838s]    96 |         [01;31m[Ksor.filter(*cloud_filtered)[m[K;
[3.838s]       |         [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~[m[K
[3.838s] In file included from [01m[K/usr/include/pcl-1.12/pcl/filters/extract_indices.h:42[m[K,
[3.838s]                  from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:1[m[K:
[3.838s] [01m[K/usr/include/pcl-1.12/pcl/filters/filter_indices.h:101:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl::FilterIndices<PointT>::filter(pcl::Indices&) [with PointT = pcl::PointXYZ; pcl::Indices = std::vector<int, std::allocator<int> >][m[Kâ€™
[3.838s]   101 |       [01;36m[Kfilter[m[K (Indices &indices)
[3.838s]       |       [01;36m[K^~~~~~[m[K
[3.838s] [01m[K/usr/include/pcl-1.12/pcl/filters/filter_indices.h:101:24:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZRGB>, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>[m[Kâ€™} to â€˜[01m[Kpcl::Indices&[m[Kâ€™ {aka â€˜[01m[Kstd::vector<int, std::allocator<int> >&[m[Kâ€™}
[3.838s]   101 |       filter ([01;36m[KIndices &indices[m[K)
[3.838s]       |               [01;36m[K~~~~~~~~~^~~~~~~[m[K
[3.838s] In file included from [01m[K/usr/include/pcl-1.12/pcl/filters/filter_indices.h:42[m[K,
[3.838s]                  from [01m[K/usr/include/pcl-1.12/pcl/filters/extract_indices.h:42[m[K,
[3.838s]                  from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:1[m[K:
[3.838s] [01m[K/usr/include/pcl-1.12/pcl/filters/filter.h:121:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl::Filter<PointT>::filter(pcl::Filter<PointT>::PointCloud&) [with PointT = pcl::PointXYZ; pcl::Filter<PointT>::PointCloud = pcl::PointCloud<pcl::PointXYZ>][m[Kâ€™
[3.838s]   121 |       [01;36m[Kfilter[m[K (PointCloud &output)
[3.838s]       |       [01;36m[K^~~~~~[m[K
[3.838s] [01m[K/usr/include/pcl-1.12/pcl/filters/filter.h:121:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZRGB>, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>[m[Kâ€™} to â€˜[01m[Kpcl::Filter<pcl::PointXYZ>::PointCloud&[m[Kâ€™ {aka â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>&[m[Kâ€™}
[3.838s]   121 |       filter ([01;36m[KPointCloud &output[m[K)
[3.838s]       |               [01;36m[K~~~~~~~~~~~~^~~~~~[m[K
[3.844s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:101:26:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.844s]   101 |         ne.setInputCloud([01;31m[Kcloud_filtered[m[K);
[3.844s]       |                          [01;31m[K^~~~~~~~~~~~~~[m[K
[3.844s]       |                          [01;31m[K|[m[K
[3.844s]       |                          [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.844s] In file included from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:14[m[K:
[3.844s] [01m[K/usr/include/pcl-1.12/pcl/features/normal_3d.h:332:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::NormalEstimation<PointInT, PointOutT>::setInputCloud(const PointCloudConstPtr&) [with PointInT = pcl::PointXYZ; PointOutT = pcl::Normal; pcl::NormalEstimation<PointInT, PointOutT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.844s]   332 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K) override
[3.844s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[3.855s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:110:28:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.855s]   110 |         fpfh.setInputCloud([01;31m[Kcloud_filtered[m[K);
[3.855s]       |                            [01;31m[K^~~~~~~~~~~~~~[m[K
[3.855s]       |                            [01;31m[K|[m[K
[3.855s]       |                            [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.855s] In file included from [01m[K/usr/include/pcl-1.12/pcl/filters/filter.h:42[m[K,
[3.855s]                  from [01m[K/usr/include/pcl-1.12/pcl/filters/filter_indices.h:42[m[K,
[3.855s]                  from [01m[K/usr/include/pcl-1.12/pcl/filters/extract_indices.h:42[m[K,
[3.855s]                  from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:1[m[K:
[3.855s] [01m[K/usr/include/pcl-1.12/pcl/pcl_base.h:92:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::PCLBase<PointT>::setInputCloud(const PointCloudConstPtr&) [with PointT = pcl::PointXYZ; pcl::PCLBase<PointT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.856s]    92 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K);
[3.856s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[3.856s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:118:26:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.856s]   118 |         ne.setInputCloud([01;31m[Kcustom_object_[m[K);
[3.856s]       |                          [01;31m[K^~~~~~~~~~~~~~[m[K
[3.856s]       |                          [01;31m[K|[m[K
[3.856s]       |                          [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.856s] In file included from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:14[m[K:
[3.856s] [01m[K/usr/include/pcl-1.12/pcl/features/normal_3d.h:332:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::NormalEstimation<PointInT, PointOutT>::setInputCloud(const PointCloudConstPtr&) [with PointInT = pcl::PointXYZ; PointOutT = pcl::Normal; pcl::NormalEstimation<PointInT, PointOutT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.856s]   332 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K) override
[3.856s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[3.856s] [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:123:28:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
[3.856s]   123 |         fpfh.setInputCloud([01;31m[Kcustom_object_[m[K);
[3.856s]       |                            [01;31m[K^~~~~~~~~~~~~~[m[K
[3.856s]       |                            [01;31m[K|[m[K
[3.856s]       |                            [01;31m[Kpcl::PointCloud<pcl::PointXYZRGB>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> >}[m[K
[3.856s] In file included from [01m[K/usr/include/pcl-1.12/pcl/filters/filter.h:42[m[K,
[3.856s]                  from [01m[K/usr/include/pcl-1.12/pcl/filters/filter_indices.h:42[m[K,
[3.856s]                  from [01m[K/usr/include/pcl-1.12/pcl/filters/extract_indices.h:42[m[K,
[3.857s]                  from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:1[m[K:
[3.857s] [01m[K/usr/include/pcl-1.12/pcl/pcl_base.h:92:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::PCLBase<PointT>::setInputCloud(const PointCloudConstPtr&) [with PointT = pcl::PointXYZ; pcl::PCLBase<PointT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
[3.857s]    92 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K);
[3.857s]       |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[6.703s] gmake[2]: *** [CMakeFiles/point_cloud_plantpot_detector.dir/build.make:76: CMakeFiles/point_cloud_plantpot_detector.dir/src/point_cloud_custom_plant_pot_detection.cpp.o] Error 1
[6.703s] gmake[1]: *** [CMakeFiles/Makefile2:193: CMakeFiles/point_cloud_plantpot_detector.dir/all] Error 2
[6.704s] gmake: *** [Makefile:146: all] Error 2
[6.706s] Invoked command in '/home/buhrmann/ws_moveit/build/point_cloud_circle_detector' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/buhrmann/ws_moveit/install/moveit_configs_utils:/opt/ros/iron /usr/bin/cmake --build /home/buhrmann/ws_moveit/build/point_cloud_circle_detector -- -j28 -l28
