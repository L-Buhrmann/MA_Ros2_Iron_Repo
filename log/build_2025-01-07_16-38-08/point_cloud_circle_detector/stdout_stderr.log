[35m[1mConsolidate compiler generated dependencies of target point_cloud_plantpot_detector[0m
[ 33%] Built target point_cloud_circle_detector
[ 66%] Built target point_cloud_cylinder_detector
[ 83%] [32mBuilding CXX object CMakeFiles/point_cloud_plantpot_detector.dir/src/point_cloud_custom_plant_pot_detection.cpp.o[0m
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudCustomObjectMatcher::listener_callback(sensor_msgs::msg::PointCloud2_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:106:26:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >&[m[Kâ€™}
  106 |         ne.setInputCloud([01;31m[Kcustom_object_[m[K);
      |                          [01;31m[K^~~~~~~~~~~~~~[m[K
      |                          [01;31m[K|[m[K
      |                          [01;31m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >}[m[K
In file included from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:14[m[K:
[01m[K/usr/include/pcl-1.12/pcl/features/normal_3d.h:332:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::NormalEstimation<PointInT, PointOutT>::setInputCloud(const PointCloudConstPtr&) [with PointInT = pcl::PointXYZRGB; PointOutT = pcl::Normal; pcl::NormalEstimation<PointInT, PointOutT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >][m[Kâ€™
  332 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K) override
      |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:111:28:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >&[m[Kâ€™}
  111 |         fpfh.setInputCloud([01;31m[Kcustom_object_[m[K);
      |                            [01;31m[K^~~~~~~~~~~~~~[m[K
      |                            [01;31m[K|[m[K
      |                            [01;31m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >}[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/filters/filter.h:42[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/filters/filter_indices.h:42[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/filters/extract_indices.h:42[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:1[m[K:
[01m[K/usr/include/pcl-1.12/pcl/pcl_base.h:92:48:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::PCLBase<PointT>::setInputCloud(const PointCloudConstPtr&) [with PointT = pcl::PointXYZRGB; pcl::PCLBase<PointT>::PointCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >][m[Kâ€™
   92 |       setInputCloud ([01;36m[Kconst PointCloudConstPtr &cloud[m[K);
      |                      [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:120:31:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kconst PointCloudSourceConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >&[m[Kâ€™}
  120 |         sac_ia.setInputSource([01;31m[Kcustom_object_[m[K);  // The pod object model
      |                               [01;31m[K^~~~~~~~~~~~~~[m[K
      |                               [01;31m[K|[m[K
      |                               [01;31m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr {aka std::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >}[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:710[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/registration/impl/registration.hpp:48:37:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::Registration<PointSource, PointTarget, Scalar>::setInputSource(const PointCloudSourceConstPtr&) [with PointSource = pcl::PointXYZRGB; PointTarget = pcl::PointXYZRGB; Scalar = float; pcl::Registration<PointSource, PointTarget, Scalar>::PointCloudSourceConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZRGB> >][m[Kâ€™
   48 |     [01;36m[Kconst PointCloudSourceConstPtr& cloud[m[K)
      |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KtransformPointCloud(std::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type&, std::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZRGB>, __gnu_cxx::_S_atomic, false, false>::element_type&, pcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4)[m[Kâ€™
  137 |             [01;31m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:60:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
   60 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:60:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[KPointT[m[Kâ€™ (â€˜[01m[Kpcl::PointXYZ[m[Kâ€™ and â€˜[01m[Kpcl::PointXYZRGB[m[Kâ€™)
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:69:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
   69 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:69:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[KPointT[m[Kâ€™ (â€˜[01m[Kpcl::PointXYZ[m[Kâ€™ and â€˜[01m[Kpcl::PointXYZRGB[m[Kâ€™)
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:87:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const Indices&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
   87 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:87:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:97:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const Indices&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
   97 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:97:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:116:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Eigen::Transform<Scalar, 3, 2>&, bool)[m[Kâ€™
  116 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:116:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:126:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Affine3f&, bool)[m[Kâ€™
  126 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:126:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:493[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/impl/transforms.hpp:221:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  221 | [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/impl/transforms.hpp:221:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[KPointT[m[Kâ€™ (â€˜[01m[Kpcl::PointXYZ[m[Kâ€™ and â€˜[01m[Kpcl::PointXYZRGB[m[Kâ€™)
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:237:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  237 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:237:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[KPointT[m[Kâ€™ (â€˜[01m[Kpcl::PointXYZ[m[Kâ€™ and â€˜[01m[Kpcl::PointXYZRGB[m[Kâ€™)
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:493[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/impl/transforms.hpp:263:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const Indices&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  263 | [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/impl/transforms.hpp:263:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:262:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const Indices&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  262 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:262:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:281:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 4, 4>&, bool)[m[Kâ€™
  281 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:281:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:291:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, const pcl::PointIndices&, pcl::PointCloud<PointT>&, const Matrix4f&, bool)[m[Kâ€™
  291 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:291:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kpcl::Registration<pcl::PointXYZRGB, pcl::PointXYZRGB, float>::Matrix4[m[Kâ€™ {aka â€˜[01m[KEigen::Matrix<float, 4, 4>[m[Kâ€™} is not derived from â€˜[01m[Kpcl::PointCloud<PointT>[m[Kâ€™
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:493[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/impl/transforms.hpp:407:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT, class Scalar> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Eigen::Matrix<Scalar, 3, 1>&, const Eigen::Quaternion<Scalar>&, bool)[m[Kâ€™
  407 | [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      | [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/impl/transforms.hpp:407:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[KPointT[m[Kâ€™ (â€˜[01m[Kpcl::PointXYZ[m[Kâ€™ and â€˜[01m[Kpcl::PointXYZRGB[m[Kâ€™)
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/transformation_estimation.h:43[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/registration.h:46[m[K,
                 from [01m[K/usr/include/pcl-1.12/pcl/registration/icp.h:46[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:2[m[K:
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:404:3:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class PointT> void pcl::transformPointCloud(const pcl::PointCloud<PointT>&, pcl::PointCloud<PointT>&, const Vector3f&, const Quaternionf&, bool)[m[Kâ€™
  404 |   [01;36m[KtransformPointCloud[m[K (const pcl::PointCloud<PointT> &cloud_in,
      |   [01;36m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/common/transforms.h:404:3:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_custom_plant_pot_detection.cpp:137:37:[m[K [01;36m[Knote: [m[K  deduced conflicting types for parameter â€˜[01m[KPointT[m[Kâ€™ (â€˜[01m[Kpcl::PointXYZ[m[Kâ€™ and â€˜[01m[Kpcl::PointXYZRGB[m[Kâ€™)
  137 |             [01;36m[Kpcl::transformPointCloud(*custom_object_, *aligned_object, sac_ia.getFinalTransformation())[m[K;
      |             [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/point_cloud_plantpot_detector.dir/build.make:76: CMakeFiles/point_cloud_plantpot_detector.dir/src/point_cloud_custom_plant_pot_detection.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:193: CMakeFiles/point_cloud_plantpot_detector.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
