[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_circle_detector.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudCircleDetector::listener_callback(sensor_msgs::msg::PointCloud2_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_circle_detector.cpp:105:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KtoPCL(std::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type&, std::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type&)[m[Kâ€™
  105 |     [01;31m[Kpcl_conversions::toPCL(*msg, *cloud)[m[K;
      |     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_circle_detector.cpp:10[m[K:
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:90:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const rclcpp::Time&, uint64_t&)[m[Kâ€™
   90 |   void [01;36m[KtoPCL[m[K(const rclcpp::Time &stamp, std::uint64_t &pcl_stamp)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:90:34:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst rclcpp::Time&[m[Kâ€™
   90 |   void toPCL([01;36m[Kconst rclcpp::Time &stamp[m[K, std::uint64_t &pcl_stamp)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:104:17:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kuint64_t pcl_conversions::toPCL(const rclcpp::Time&)[m[Kâ€™
  104 |   std::uint64_t [01;36m[KtoPCL[m[K(const rclcpp::Time &stamp)
      |                 [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:104:17:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:121:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const Header&, pcl::PCLHeader&)[m[Kâ€™
  121 |   void [01;36m[KtoPCL[m[K(const std_msgs::msg::Header &header, pcl::PCLHeader &pcl_header)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:121:43:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst Header&[m[Kâ€™ {aka â€˜[01m[Kconst std_msgs::msg::Header_<std::allocator<void> >&[m[Kâ€™}
  121 |   void toPCL([01;36m[Kconst std_msgs::msg::Header &header[m[K, pcl::PCLHeader &pcl_header)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:141:18:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kpcl::PCLHeader pcl_conversions::toPCL(const Header&)[m[Kâ€™
  141 |   pcl::PCLHeader [01;36m[KtoPCL[m[K(const std_msgs::msg::Header &header)
      |                  [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:141:18:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:187:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const Image&, pcl::PCLImage&)[m[Kâ€™
  187 |   void [01;36m[KtoPCL[m[K(const sensor_msgs::msg::Image &image, pcl::PCLImage &pcl_image)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:187:45:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst Image&[m[Kâ€™ {aka â€˜[01m[Kconst sensor_msgs::msg::Image_<std::allocator<void> >&[m[Kâ€™}
  187 |   void toPCL([01;36m[Kconst sensor_msgs::msg::Image &image[m[K, pcl::PCLImage &pcl_image)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:223:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const PointField&, pcl::PCLPointField&)[m[Kâ€™
  223 |   void [01;36m[KtoPCL[m[K(const sensor_msgs::msg::PointField &pf, pcl::PCLPointField &pcl_pf)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:223:50:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst PointField&[m[Kâ€™ {aka â€˜[01m[Kconst sensor_msgs::msg::PointField_<std::allocator<void> >&[m[Kâ€™}
  223 |   void toPCL([01;36m[Kconst sensor_msgs::msg::PointField &pf[m[K, pcl::PCLPointField &pcl_pf)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:232:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const std::vector<sensor_msgs::msg::PointField_<std::allocator<void> >, std::allocator<sensor_msgs::msg::PointField_<std::allocator<void> > > >&, std::vector<pcl::PCLPointField>&)[m[Kâ€™
  232 |   void [01;36m[KtoPCL[m[K(const std::vector<sensor_msgs::msg::PointField> &pfs, std::vector<pcl::PCLPointField> &pcl_pfs)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:232:63:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst std::vector<sensor_msgs::msg::PointField_<std::allocator<void> >, std::allocator<sensor_msgs::msg::PointField_<std::allocator<void> > > >&[m[Kâ€™
  232 |   void toPCL([01;36m[Kconst std::vector<sensor_msgs::msg::PointField> &pfs[m[K, std::vector<pcl::PCLPointField> &pcl_pfs)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:285:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const PointCloud2&, pcl::PCLPointCloud2&)[m[Kâ€™
  285 |   void [01;36m[KtoPCL[m[K(const sensor_msgs::msg::PointCloud2 &pc2, pcl::PCLPointCloud2 &pcl_pc2)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:285:77:[m[K [01;36m[Knote: [m[K  no known conversion for argument 2 from â€˜[01m[Kstd::__shared_ptr_access<pcl::PointCloud<pcl::PointXYZ>, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™} to â€˜[01m[Kpcl::PCLPointCloud2&[m[Kâ€™
  285 |   void toPCL(const sensor_msgs::msg::PointCloud2 &pc2, [01;36m[Kpcl::PCLPointCloud2 &pcl_pc2[m[K)
      |                                                        [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:315:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const PointIndices&, pcl::PointIndices&)[m[Kâ€™
  315 |   void [01;36m[KtoPCL[m[K(const pcl_msgs::msg::PointIndices &pi, pcl::PointIndices &pcl_pi)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:315:49:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst PointIndices&[m[Kâ€™ {aka â€˜[01m[Kconst pcl_msgs::msg::PointIndices_<std::allocator<void> >&[m[Kâ€™}
  315 |   void toPCL([01;36m[Kconst pcl_msgs::msg::PointIndices &pi[m[K, pcl::PointIndices &pcl_pi)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:345:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const ModelCoefficients&, pcl::ModelCoefficients&)[m[Kâ€™
  345 |   void [01;36m[KtoPCL[m[K(const pcl_msgs::msg::ModelCoefficients &mc, pcl::ModelCoefficients &pcl_mc)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:345:54:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst ModelCoefficients&[m[Kâ€™ {aka â€˜[01m[Kconst pcl_msgs::msg::ModelCoefficients_<std::allocator<void> >&[m[Kâ€™}
  345 |   void toPCL([01;36m[Kconst pcl_msgs::msg::ModelCoefficients &mc[m[K, pcl::ModelCoefficients &pcl_mc)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:410:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const Vertices&, pcl::Vertices&)[m[Kâ€™
  410 |   void [01;36m[KtoPCL[m[K(const pcl_msgs::msg::Vertices &vert, pcl::Vertices &pcl_vert)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:410:45:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst Vertices&[m[Kâ€™ {aka â€˜[01m[Kconst pcl_msgs::msg::Vertices_<std::allocator<void> >&[m[Kâ€™}
  410 |   void toPCL([01;36m[Kconst pcl_msgs::msg::Vertices &vert[m[K, pcl::Vertices &pcl_vert)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:416:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const std::vector<pcl_msgs::msg::Vertices_<std::allocator<void> >, std::allocator<pcl_msgs::msg::Vertices_<std::allocator<void> > > >&, std::vector<pcl::Vertices>&)[m[Kâ€™
  416 |   void [01;36m[KtoPCL[m[K(const std::vector<pcl_msgs::msg::Vertices> &verts, std::vector<pcl::Vertices> &pcl_verts)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:416:58:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst std::vector<pcl_msgs::msg::Vertices_<std::allocator<void> >, std::allocator<pcl_msgs::msg::Vertices_<std::allocator<void> > > >&[m[Kâ€™
  416 |   void toPCL([01;36m[Kconst std::vector<pcl_msgs::msg::Vertices> &verts[m[K, std::vector<pcl::Vertices> &pcl_verts)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:461:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kvoid pcl_conversions::toPCL(const PolygonMesh&, pcl::PolygonMesh&)[m[Kâ€™
  461 |   void [01;36m[KtoPCL[m[K(const pcl_msgs::msg::PolygonMesh &mesh, pcl::PolygonMesh &pcl_mesh)
      |        [01;36m[K^~~~~[m[K
[01m[K/opt/ros/iron/include/pcl_conversions/pcl_conversions/pcl_conversions.h:461:48:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::__shared_ptr_access<sensor_msgs::msg::PointCloud2_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type[m[Kâ€™ {aka â€˜[01m[Ksensor_msgs::msg::PointCloud2_<std::allocator<void> >[m[Kâ€™} to â€˜[01m[Kconst PolygonMesh&[m[Kâ€™ {aka â€˜[01m[Kconst pcl_msgs::msg::PolygonMesh_<std::allocator<void> >&[m[Kâ€™}
  461 |   void toPCL([01;36m[Kconst pcl_msgs::msg::PolygonMesh &mesh[m[K, pcl::PolygonMesh &pcl_mesh)
      |              [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~[m[K
gmake[2]: *** [CMakeFiles/point_cloud_circle_detector.dir/build.make:76: CMakeFiles/point_cloud_circle_detector.dir/src/point_cloud_circle_detector.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/point_cloud_circle_detector.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
