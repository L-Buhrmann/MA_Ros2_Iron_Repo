-- Found ament_cmake: 2.0.7 (/opt/ros/iron/share/ament_cmake/cmake)
-- Found sensor_msgs: 5.0.1 (/opt/ros/iron/share/sensor_msgs/cmake)
-- Found rosidl_generator_c: 4.0.1 (/opt/ros/iron/share/rosidl_generator_c/cmake)
-- Found rosidl_generator_cpp: 4.0.1 (/opt/ros/iron/share/rosidl_generator_cpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rclcpp: 21.0.8 (/opt/ros/iron/share/rclcpp/cmake)
-- Found rmw_implementation_cmake: 7.1.0 (/opt/ros/iron/share/rmw_implementation_cmake/cmake)
-- Found rmw_fastrtps_cpp: 7.1.4 (/opt/ros/iron/share/rmw_fastrtps_cpp/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Found pcl_conversions: 2.5.4 (/opt/ros/iron/share/pcl_conversions/cmake)
-- Eigen found (include: /usr/include/eigen3, version: 3.4.0)
-- FLANN found (include: /usr/include, lib: /usr/lib/x86_64-linux-gnu/libflann_cpp.so)
-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)
-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)
-- Eigen found (include: /usr/include/eigen3, version: 3.4.0)
-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)
-- OpenNI2 found (version: 2.2.0.33, include: /usr/include/openni2, lib: /usr/lib/x86_64-linux-gnu/libOpenNI2.so;libusb::libusb)
-- Found Qhull version 8.0.2
-- OpenNI found (version: 1.5.4.0, include: /usr/include/ni, lib: /usr/lib/libOpenNI.so;libusb::libusb)
[33mCMake Warning (dev) at CMakeLists.txt:22 (find_package):
  Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
  Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
  command to set the policy and suppress this warning.

  CMake variable PCL_ROOT is set to:

    /usr

  For compatibility, CMake is ignoring the variable.
This warning is for project developers.  Use -Wno-dev to suppress it.
[0m
-- Found ament_lint_auto: 0.14.4 (/opt/ros/iron/share/ament_lint_auto/cmake)
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: 
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /home/buhrmann/ws_moveit/build/point_cloud_circle_detector
[35m[1mConsolidate compiler generated dependencies of target point_cloud_cylinder_detector[0m
[35m[1mConsolidate compiler generated dependencies of target point_cloud_circle_detector[0m
[35m[1mConsolidate compiler generated dependencies of target point_cloud_plantpot_ppf_detector[0m
[35m[1mConsolidate compiler generated dependencies of target point_cloud_plantpot_detector[0m
[ 10%] [32mBuilding CXX object CMakeFiles/point_cloud_plantpot_pfh_detector.dir/src/point_cloud_plantpot_pfh_detector.cpp.o[0m
[ 30%] Built target point_cloud_cylinder_detector
[ 50%] Built target point_cloud_circle_detector
[ 70%] Built target point_cloud_plantpot_ppf_detector
[ 90%] Built target point_cloud_plantpot_detector
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:[m[K In member function â€˜[01m[Kvoid PointCloudCustomObjectMatcher::listener_callback(sensor_msgs::msg::PointCloud2_<std::allocator<void> >::SharedPtr)[m[Kâ€™:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:145:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kpfh_estimator[m[Kâ€™ was not declared in this scope
  145 |             [01;31m[Kpfh_estimator[m[K.setInputCloud(cloud_filtered_voxel);  // Set input cloud
      |             [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:147:35:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand type is â€˜[01m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[Kâ€™)
  147 |             pfh_estimator.compute([01;31m[K*cloud_pfh_features[m[K);  // Compute PPF features
      |                                   [01;31m[K^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:176:24:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing Ptr = class std::shared_ptr<pcl::PointCloud<pcl::PFHSignature125> >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<pcl::PointCloud<pcl::PFHSignature125> >[m[Kâ€™} has no member named â€˜[01m[KsetInputCloud[m[Kâ€™
  176 |             pfh_custom.[01;31m[KsetInputCloud[m[K(object_voxel);
      |                        [01;31m[K^~~~~~~~~~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:177:24:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing Ptr = class std::shared_ptr<pcl::PointCloud<pcl::PFHSignature125> >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<pcl::PointCloud<pcl::PFHSignature125> >[m[Kâ€™} has no member named â€˜[01m[KsetInputNormals[m[Kâ€™
  177 |             pfh_custom.[01;31m[KsetInputNormals[m[K(custom_object_normals);
      |                        [01;31m[K^~~~~~~~~~~~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:178:24:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kusing Ptr = class std::shared_ptr<pcl::PointCloud<pcl::PFHSignature125> >[m[Kâ€™ {aka â€˜[01m[Kclass std::shared_ptr<pcl::PointCloud<pcl::PFHSignature125> >[m[Kâ€™} has no member named â€˜[01m[Kcompute[m[Kâ€™
  178 |             pfh_custom.[01;31m[Kcompute[m[K(*custom_object_pfh_features);
      |                        [01;31m[K^~~~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:178:32:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand type is â€˜[01m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[Kâ€™)
  178 |             pfh_custom.compute([01;31m[K*custom_object_pfh_features[m[K);
      |                                [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/logging.hpp:24[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/client.hpp:43[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/iron/include/rclcpp/rclcpp/rclcpp.hpp:167[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:5[m[K:
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:187:101:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[Kâ€™
  187 |             RCLCPP_INFO(this->get_logger(), "Source feature points: %zu", custom_object_pfh_features[01;31m[K->[m[Kpoints.size());
      |                                                                                                     [01;31m[K^~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:188:93:[m[K [01;31m[Kerror: [m[Kbase operand of â€˜[01m[K->[m[Kâ€™ has non-pointer type â€˜[01m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[Kâ€™
  188 |             RCLCPP_INFO(this->get_logger(), "Target feature points: %zu", cloud_pfh_features[01;31m[K->[m[Kpoints.size());
      |                                                                                             [01;31m[K^~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:199:38:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[Kâ€™ to â€˜[01m[Kconst FeatureCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PPFSignature> >&[m[Kâ€™}
  199 |             sac_ia.setSourceFeatures([01;31m[Kcustom_object_pfh_features[m[K);  // Set the PPF features for the source
      |                                      [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
      |                                      [01;31m[K|[m[K
      |                                      [01;31m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/ia_ransac.h:335[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:4[m[K:
[01m[K/usr/include/pcl-1.12/pcl/registration/impl/ia_ransac.hpp:51:33:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::SampleConsensusInitialAlignment<PointSource, PointTarget, FeatureT>::setSourceFeatures(const FeatureCloudConstPtr&) [with PointSource = pcl::PointXYZ; PointTarget = pcl::PointXYZ; FeatureT = pcl::PPFSignature; pcl::SampleConsensusInitialAlignment<PointSource, PointTarget, FeatureT>::FeatureCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PPFSignature> >][m[Kâ€™
   51 |     [01;36m[Kconst FeatureCloudConstPtr& features[m[K)
      |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
[01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:200:38:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[Kâ€™ to â€˜[01m[Kconst FeatureCloudConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PPFSignature> >&[m[Kâ€™}
  200 |             sac_ia.setTargetFeatures([01;31m[Kcloud_pfh_features[m[K);  // Set the PPF features for the target
      |                                      [01;31m[K^~~~~~~~~~~~~~~~~~[m[K
      |                                      [01;31m[K|[m[K
      |                                      [01;31m[Kpcl::PFHEstimation<pcl::PointXYZ, pcl::Normal, pcl::PFHSignature125>[m[K
In file included from [01m[K/usr/include/pcl-1.12/pcl/registration/ia_ransac.h:335[m[K,
                 from [01m[K/home/buhrmann/ws_moveit/src/point_cloud_circle_detector/src/point_cloud_plantpot_pfh_detector.cpp:4[m[K:
[01m[K/usr/include/pcl-1.12/pcl/registration/impl/ia_ransac.hpp:65:33:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid pcl::SampleConsensusInitialAlignment<PointSource, PointTarget, FeatureT>::setTargetFeatures(const FeatureCloudConstPtr&) [with PointSource = pcl::PointXYZ; PointTarget = pcl::PointXYZ; FeatureT = pcl::PPFSignature; pcl::SampleConsensusInitialAlignment<PointSource, PointTarget, FeatureT>::FeatureCloudConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PPFSignature> >][m[Kâ€™
   65 |     [01;36m[Kconst FeatureCloudConstPtr& features[m[K)
      |     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/point_cloud_plantpot_pfh_detector.dir/build.make:76: CMakeFiles/point_cloud_plantpot_pfh_detector.dir/src/point_cloud_plantpot_pfh_detector.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:249: CMakeFiles/point_cloud_plantpot_pfh_detector.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
